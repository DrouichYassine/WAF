# Default WAF Rules

rules:
    # SQL Injection Protection
  - id: sql-injection-1
    name: SQL Injection Attack
    description: Detects common SQL injection patterns
    tags: [sql, injection, database]
    priority: high
    match:
      # UNION-based and information gathering injections
      - target: any
        pattern: "(?i)(union\\s+select|select\\s+@@|select\\s+from\\s+information_schema)"
        
      # Boolean-based injections - Common patterns without requiring comments
      - target: any
        pattern: "(?i)(\\bor\\b\\s+'?\\s*1\\s*=\\s*1|\\bor\\b\\s+'?true'?|\\bor\\b\\s+\\d+\\s*=\\s*\\d+\\b|\\band\\b\\s+\\d+\\s*=\\s*\\d+\\b|\\bxor\\b\\s+\\d+\\s*=\\s*\\d+\\b)"
        
      # Time-based and other advanced injection techniques
      - target: any
        pattern: "(?i)(sleep\\s*\\(|benchmark\\s*\\(|pg_sleep\\s*\\(|waitfor\\s+delay\\s*)"
    actions: [block, log]

  # XSS Protection
  - id: xss-1
    name: Cross-site Scripting Attack
    description: Detects common XSS patterns
    tags: [xss, script, injection]
    priority: high
    match:
      - target: any
        pattern: "(?i)(<script>[^<]*?(</script>|alert|document\\.)|javascript:\\s*[^;]+\\s*\\(|\\bon(load|error|click)\\s*=\\s*[\"'])"
      - target: any
        pattern: "(?i)(\\balert\\b\\s*\\([^)]*?\\)|\\beval\\b\\s*\\([^)]*?\\)|document\\.cookie|document\\.location)"
    actions: [block, log]

  # Path Traversal Protection
  - id: path-traversal-1
    name: Path Traversal Attack
    description: Detects directory traversal attempts
    tags: [traversal, file, lfi]
    priority: high
    match:
      target: path
      pattern: "(?i)(\\.\\./.*\\.|\\.\\.\\\\.*\\.|/etc/passwd|/etc/shadow|/windows/win.ini|boot\\.ini|web\\.config)"
    actions: [block, log]

    # Command Injection Protection
  - id: command-injection-1
    name: Command Injection Attack
    description: Detects OS command injection attempts
    tags: [command, injection, os]
    priority: high
    match:
      # Command separators followed by common commands
      - target: any
        pattern: "(?i)(;|\\||\\|\\||&|&&)\\s*([a-zA-Z0-9_\\-/\\\\]*\\s*)?(cat|ls|dir|rm|del|cp|mv|touch|chmod|chown|wget|curl|ping|nc|netcat|bash|sh|cmd|powershell|nslookup|tracert|whoami|id|echo|find|grep)\\b"
        
      # Command execution via backticks/subshells
      - target: any
        pattern: "(?i)(`|\\$\\(|\\$\\{).*?(`|\\)|\\})"
        
      # Direct command execution functions
      - target: any
        pattern: "(?i)(system|exec|popen|shell_exec|passthru|proc_open|eval)\\s*\\("
        
      # Shell execution patterns
      - target: any
        pattern: "(?i)(\\/(bin|usr|opt)\\/[a-z]+\\s|\\\\(windows|system32)\\\\[a-z]+\\.exe)"
        
      # Common special character bypass techniques
      - target: any
        pattern: "(?i)(\\${IFS}|%0[aA]|\\\\n|\\^|\\\\x[0-9a-fA-F]{2})"
    actions: [block, log]

  # File Upload Protection
  - id: file-upload-1
    name: Malicious File Upload
    description: Detects potentially dangerous file uploads
    tags: [upload, file]
    priority: medium
    match:
      target: any
      pattern: "(?i)\\.(php|phtml|php3|php4|php5|jsp|asp|aspx|exe|sh|bash|pl)$"
    actions: [block, log]

  # Bad User Agent Protection
  - id: bad-user-agent-1
    name: Suspicious User Agent
    description: Detects known malicious user agents
    tags: [user-agent, scanner]
    priority: low
    match:
      target: header
      pattern: "(?i)(nikto|sqlmap|acunetix|nessus|nmap|burpsuite|masscan)"
    actions: [block, log]